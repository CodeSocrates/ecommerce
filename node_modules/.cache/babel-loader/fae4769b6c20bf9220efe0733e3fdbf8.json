{"ast":null,"code":"const BUCKET = \"BUCKET\";\nexport const getBucketItems = () => {\n  //로컬 스토리지에 아이템이 있으면 JSON 스타일로 파싱해서\n  //반환하고, 없으면 아무것도 반환하지 않는 함수.\n  const items = localStorage.getItem(BUCKET);\n  return items ? JSON.parse(items) : [];\n};\nexport const addBucket = product => {\n  //아이템을 불러와서 장바구니에 추가하고 로컬 스토리지에 저장하는 함수\n  let items = getBucketItems(); //동일 상품이 있으면 추가하지 않는 로직\n\n  const isSameProduct = !!items.find(item => item.id === product.id); //!!를 통해 object 객체인 경우엔 참을, null이나 언디파인드면 거짓을 반환\n\n  if (!isSameProduct) {\n    items.push(product);\n    localStorage.setItem(BUCKET, JSON.stringify(items));\n  }\n};\nexport const removeBucketItem = productId => {\n  // 기존 장바구니 상품 리스트 가져오기\n  let items = getBucketItems(); // 삭제하고 싶은 상품 하나 제거하기\n\n  items = items.filter(item => item.id !== productId); // 로컬스토리지에서 장바구니 정보 날리기\n  // 다시 상품 리스트 저장하기.\n};","map":{"version":3,"names":["BUCKET","getBucketItems","items","localStorage","getItem","JSON","parse","addBucket","product","isSameProduct","find","item","id","push","setItem","stringify","removeBucketItem","productId","filter"],"sources":["D:/React/ecommerce/src/utils/storage.js"],"sourcesContent":["const BUCKET = \"BUCKET\";\r\n\r\nexport const getBucketItems = () => {\r\n  //로컬 스토리지에 아이템이 있으면 JSON 스타일로 파싱해서\r\n  //반환하고, 없으면 아무것도 반환하지 않는 함수.\r\n  const items = localStorage.getItem(BUCKET);\r\n  return items ? JSON.parse(items) : [];\r\n};\r\n\r\nexport const addBucket = (product) => {\r\n  //아이템을 불러와서 장바구니에 추가하고 로컬 스토리지에 저장하는 함수\r\n  let items = getBucketItems();\r\n\r\n  //동일 상품이 있으면 추가하지 않는 로직\r\n  const isSameProduct = !!items.find((item) => item.id === product.id);\r\n  //!!를 통해 object 객체인 경우엔 참을, null이나 언디파인드면 거짓을 반환\r\n  \r\n  if(!isSameProduct) {\r\n    items.push(product);\r\n    localStorage.setItem(BUCKET, JSON.stringify(items));\r\n  }\r\n};\r\n\r\nexport const removeBucketItem = (productId) => {\r\n  // 기존 장바구니 상품 리스트 가져오기\r\n  let items = getBucketItems();\r\n\r\n  // 삭제하고 싶은 상품 하나 제거하기\r\n  items = items.filter( item => item.id !== productId );\r\n  // 로컬스토리지에서 장바구니 정보 날리기\r\n  // 다시 상품 리스트 저장하기.\r\n\r\n}"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC;EACA;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,MAArB,CAAd;EACA,OAAOE,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAH,GAAuB,EAAnC;AACD,CALM;AAOP,OAAO,MAAMK,SAAS,GAAIC,OAAD,IAAa;EACpC;EACA,IAAIN,KAAK,GAAGD,cAAc,EAA1B,CAFoC,CAIpC;;EACA,MAAMQ,aAAa,GAAG,CAAC,CAACP,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAAzC,CAAxB,CALoC,CAMpC;;EAEA,IAAG,CAACH,aAAJ,EAAmB;IACjBP,KAAK,CAACW,IAAN,CAAWL,OAAX;IACAL,YAAY,CAACW,OAAb,CAAqBd,MAArB,EAA6BK,IAAI,CAACU,SAAL,CAAeb,KAAf,CAA7B;EACD;AACF,CAZM;AAcP,OAAO,MAAMc,gBAAgB,GAAIC,SAAD,IAAe;EAC7C;EACA,IAAIf,KAAK,GAAGD,cAAc,EAA1B,CAF6C,CAI7C;;EACAC,KAAK,GAAGA,KAAK,CAACgB,MAAN,CAAcP,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYK,SAAlC,CAAR,CAL6C,CAM7C;EACA;AAED,CATM"},"metadata":{},"sourceType":"module"}